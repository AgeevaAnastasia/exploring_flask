"""Flask-WTForm

Введение

Flask-WTForm — это модуль для Flask, который предоставляет инструменты для
работы с формами веб-приложений на Python. Flask-WTForm позволяет легко
создавать и обрабатывать формы, валидировать данные, защищать приложение от
атак CSRF и многое другое.


Зачем использовать Flask-WTF?

Создание форм вручную может быть утомительным и трудоемким процессом,
особенно если вы хотите создать несколько форм. Flask-WTF упрощает этот
процесс, предоставляя множество инструментов, которые позволяют быстро
создавать и обрабатывать формы.

Кроме того, Flask-WTF предоставляет механизмы валидации данных, что позволяет
легко проверять правильность заполнения формы. Это особенно важно при работе
с конфиденциальной информацией, такой как пароли или номера кредитных карт.


Flask-WTF также обеспечивает защиту от атак CSRF (межсайтовой подделки
запросов), что является важным аспектом безопасности веб-приложений.
Установка и настройка


Установка Flask-WTF

Для установки Flask-WTF необходимо выполнить команду:

pip install Flask-WTF


После установки модуля его можно импортировать в приложение Flask:"""

from flask_wtf import FlaskForm


"""Настройка защиты от CSRF-атак

Защита от CSRF-атак в Flask-WTF осуществляется с помощью генерации токена,
который добавляется к каждой форме. При отправке формы этот токен проверяется
на сервере, чтобы убедиться, что запрос был отправлен с того же сайта.

Для включения защиты от CSRF-атак в Flask-WTF необходимо установить секретный
ключ приложения. Этот ключ используется для генерации токена и должен быть
достаточно длинным и случайным.


Рассмотрим пример настройки защиты от CSRF-атак:"""

from flask_wtf.csrf import CSRFProtect
app = Flask(__name__)
app.config['SECRET_KEY'] = 'mysecretkey'
csrf = CSRFProtect(app)


"""В этом примере мы создаем объект csrf и передаем ему приложение Flask. Затем мы
устанавливаем секретный ключ приложения. После этого защита от CSRF-атак
будет включена для всех форм в приложении.

Если вы хотите отключить защиту от CSRF-атак для определенной формы, вы
можете использовать декоратор csrf.exempt:"""

from flask_wtf.csrf import CSRFProtect
app = Flask(__name__)
app.config['SECRET_KEY'] = 'mysecretkey'
csrf = CSRFProtect(app)
@app.route('/form', methods=['GET', 'POST'])
@csrf.exempt
def my_form():
    pass

"""
...


В этом примере мы используем декоратор exempt объекта csrf для отключения
защиты от CSRF-атак для формы, которая обрабатывается в функции my_form().
Защита от CSRF-атак является важным аспектом безопасности веб-приложений.
Flask-WTF предоставляет простые и эффективные механизмы защиты от таких атак,
которые можно легко настроить в приложении Flask.
"""