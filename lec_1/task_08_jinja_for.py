"""Вывод в цикле

Аналогично Python, можно использовать цикл for внутри шаблона для вывода
элементов последовательности. Из примера ниже понятно, что цикл заключается в
специальные скобки {% %}, а конец цикла обязательно заканчивается блоком {% endfor %}


{% for item in item_list %}
{{ item }}
{% endfor %}


Изменим представление poems(), которое создали ранее на лекции. Сформируем
аналогичный вывод стихотворения силами шаблонизатора Jinja.
Помещаем список со строками стихотворения в словарь и пробросим его в шаблон."""
from flask import Flask
from flask import render_template

app = Flask(__name__)


@app.route('/poems/')
def poems():
    context = {'poem': ['Вот не думал, не гадал,',
        'Программистом взял и стал.',
        'Хитрый знает он язык,',
        'Он к другому не привык.',
        ]}
    # txt = """<h1>Стихотворение</h1>\n<p>""" +
    '<br/>'.join(poem) + '</p>'
    return render_template('poems.html', **context)



"""В шаблоне poems.html создадим цикл для форматированного вывода
...
<body>
<h1 class="text-monospace text-center">Стихотворение</h1>
<p class="row">
{% for line in poem %}
<span class="text-black-50 col-12 col-md-6">{{ line
}}</span><br/>
{% endfor %}
</p>
</body>
...
Как и в Python, условия и циклы можно использовать совместно, помещая одно в
другое в зависимости от задач программиста."""


if __name__ == '__main__':
    app.run()