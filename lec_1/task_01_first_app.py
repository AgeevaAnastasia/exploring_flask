"""Создаём первое веб-приложение
Простейшее приложение на Flask займёт несколько строк кода в одном файле."""

from flask import Flask

app = Flask(__name__)


@app.route('/')
def hello_world():
    return 'Hello World!'


if __name__ == '__main__':
    app.run()

"""
В первой строке указываем импортировать из модуля flask класс Flask. Экземпляр
этого класса будет нашим WSGI-приложением.
Далее создаем экземпляр этого класса и сохраняем его в переменную app. Мы
передаем классу имя модуля или пакета. Flask не знает, где искать шаблоны,
статические файлы и так далее, поэтому мы должны использовать переменную
__name__.
Затем используем декоратор route() из переменной app.
Декоратор в Python — это функция, которая принимает другую функцию в качестве
аргумента.
Декоратор route() принимает строку с URL-адресом. При переходе пользователя
сайта по указанному адресу запускается декорированная функция.
Внутри функции-представления (hello world() в нашем примере) прописывается
логика обработки пользовательского запроса. Функция обязательно возвращает
(return) сообщение, которое мы хотим отобразить в браузере пользователя. При
этом сообщение может быть строкового типа (str).
Наконец, мы используем run()-функцию для запуска локального сервера с нашим
приложением. Условие __name__ == '__main__' означает, что сервер работает
только в том случае, если скрипт выполняется непосредственно из
Python-интерпретатора и не используется в качестве импортированного модуля.


Первый запуск
Запустить веб сервер можно несколькими способами. Например можно запустить
файл проекта на выполнение из вашей IDE.

Другой способ — команда flask в терминале ОС. Например
flask --app lesson_1/project run

Благодаря установке click у нас работает команда flask в которую по ключу --app
передаём название основного файла проекта и команду run на запуск.

* Serving Flask app 'lesson_1/project'
* Debug mode: off
WARNING: This is a development server. Do not use it in a production deployment. Use
a production WSGI server instead.
* Running on http://127.0.0.1:5000
Press CTRL+C to quit

Обратите внимание на предупреждение. Встроенный сервер подходит для
разработки проекта, но его не рекомендуют использовать в продакшене.
Чтобы убедиться в работе, переходим по адресу http://1 27.0.0.1:5000 и видим в
браузере Hello World!

"""
